{"version":3,"sources":["store/actions.js","store/store.js","store/selectors.js","components/Loader/Loader.js","components/Error/Error.js","components/RecipeCard/RecipeCard.js","components/RecipesList/RecipesList.js","components/RecipesList/index.js","api/api_recipes.js","components/ModalWindow/ModalWindowForm.js","components/ModalWindow/ModalWindow.js","components/ModalWindow/index.js","components/AddNewRecipe/AddNewRecipe.js","App.js","index.js"],"names":["ACTIONS_TYPES","initialState","recipesListData","isLoading","error","store","createStore","state","arguments","length","undefined","action","type","Object","objectSpread2","recipes","concat","toConsumableArray","recipe","applyMiddleware","thunk","rootSelector","selectRecipes","createSelector","_ref","sort","a","b","date","localeCompare","selectRecipesListError","_ref2","selectIsLoading","_ref3","Loader","react_default","createElement","className","Error","message","href","defaultProps","RecipeCard","src","imageURL","alt","name","ingredients","map","item","steps","RecipesList","recipesData","loadRecipes","useEffect","components_Loader_Loader","components_Error_Error","components_RecipeCard_RecipeCard","connect","dispatch","fetch","then","response","json","data","catch","setRecipesError","finally","ModalWindowForm","close","handleAdd","handleSubmit","onSubmit","htmlFor","id","required","onChange","e","cols","rows","onClick","value","ModalWindow","closeWindow","addRecipe","_useState","useState","_useState2","slicedToArray","newRecipe","setNewRecipe","ModalWindow_ModalWindowForm","target","split","preventDefault","Date","getFullYear","getMonth","getDate","AddNewRecipe","showWindow","setShowWindow","components_ModalWindow","App","components_RecipesList","components_AddNewRecipe_AddNewRecipe","ReactDOM","render","es","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.5975a759.chunk.js","sourcesContent":["import { getRecipesFromServer } from '../api/api_recipes';\n\nexport const ACTIONS_TYPES = {\n  SAVE_RECIPES: 'SAVE_RECIPES',\n  SET_RECIPES_ERROR: 'SET_RECIPES_ERROR',\n  START_LOADING: 'START_LOADING',\n  STOP_LOADING: 'STOP_LOADING',\n  ADD_NEW_RECIPE: 'ADD_NEW_RECIPE',\n};\n\nconst getRecipes = recipes => ({\n  type: ACTIONS_TYPES.SAVE_RECIPES,\n  recipes,\n});\n\nconst setRecipesError = error => ({\n  type: ACTIONS_TYPES.SET_RECIPES_ERROR,\n  error,\n});\n\nconst startLoading = () => ({\n  type: ACTIONS_TYPES.START_LOADING,\n});\n\nconst stopLoading = () => ({\n  type: ACTIONS_TYPES.STOP_LOADING,\n});\n\nexport const addRecipe = recipe => ({\n  type: ACTIONS_TYPES.ADD_NEW_RECIPE,\n  recipe,\n});\n\nexport const loadRecipes = () => (dispatch) => {\n  dispatch(startLoading());\n\n  getRecipesFromServer()\n    .then(data => dispatch(getRecipes(data)))\n    .catch(error => dispatch(setRecipesError(error.message)))\n    .finally(() => dispatch(stopLoading()));\n};\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { ACTIONS_TYPES } from './actions';\n\nconst initialState = {\n  recipesListData: null,\n  isLoading: false,\n  error: null,\n};\n\nconst rootReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ACTIONS_TYPES.SAVE_RECIPES:\n      return {\n        ...state,\n        error: null,\n        recipesListData: action.recipes,\n      };\n\n    case ACTIONS_TYPES.SET_RECIPES_ERROR:\n      return {\n        ...state,\n        error: action.error,\n        recipesListData: null,\n      };\n\n    case ACTIONS_TYPES.START_LOADING:\n      return {\n        ...state,\n        isLoading: true,\n      };\n    case ACTIONS_TYPES.STOP_LOADING:\n      return {\n        ...state,\n        isLoading: false,\n      };\n\n    case ACTIONS_TYPES.ADD_NEW_RECIPE:\n      return {\n        ...state,\n        recipesListData: [\n          ...state.recipesListData,\n          action.recipe,\n        ],\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst store = createStore(rootReducer, applyMiddleware(thunk));\n\nexport default store;\n","import { createSelector } from 'reselect';\n\nconst rootSelector = state => state;\n\nexport const selectRecipes = createSelector(\n  rootSelector,\n  ({ recipesListData }) => {\n    if (!recipesListData) {\n      return [];\n    }\n\n    return recipesListData.sort((a, b) => a.date.localeCompare(b.date));\n  }\n);\n\nexport const selectRecipesListError = createSelector(\n  rootSelector,\n  ({ error }) => error,\n);\n\nexport const selectIsLoading = createSelector(\n  rootSelector,\n  ({ isLoading }) => isLoading,\n);\n","import React from 'react';\n\nconst Loader = () => (\n  <div className=\"loader__container\">\n    <div className=\"lds-roller\">\n      <div />\n      <div />\n      <div />\n      <div />\n      <div />\n      <div />\n      <div />\n      <div />\n    </div>\n  </div>\n);\n\nexport default Loader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Error = ({ message }) => (\n  <div className=\"error\">\n    <p className=\"error__text\">\n      ERROR\n    </p>\n\n    <a href=\"/\" className=\"error__link\">\n      Go to Home\n    </a>\n  </div>\n);\n\nError.propTypes = {\n  message: PropTypes.string,\n};\n\nError.defaultProps = {\n  message: 'Sorry, something went wrong!!!',\n};\n\nexport default Error;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst RecipeCard = ({ recipe }) => (\n  <div className=\"recipe\">\n    <img\n      className=\"recipe__image\"\n      src={recipe.imageURL}\n      alt={recipe.name}\n    />\n\n    <p className=\"recipe__date\">\n      {recipe.date}\n    </p>\n\n    <h2 className=\"recipe__title\">\n      {recipe.name}\n    </h2>\n\n    <div className=\"recipe__ingredients\">\n      <h3 className=\"ingredients__title\">\n        Ingredients\n      </h3>\n      <div className=\"ingredients__list\">\n        {recipe.ingredients.map(item => (\n          <p>{item}</p>\n        ))}\n      </div>\n    </div>\n\n    <div className=\"recipe__directions\">\n      <h3 className=\"directions__title\">\n        Directions\n      </h3>\n      <div>\n        {recipe.steps}\n      </div>\n    </div>\n\n  </div>\n);\n\nRecipeCard.propTypes = { recipe: PropTypes.objectOf.isRequired };\n\nexport default RecipeCard;\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Loader from '../Loader/Loader';\nimport Error from '../Error/Error';\nimport RecipeCard from '../RecipeCard/RecipeCard';\n\nconst RecipesList = ({ recipesData, error, isLoading, loadRecipes }) => {\n  useEffect(() => loadRecipes(), []);\n\n  if (isLoading) {\n    return <Loader />;\n  }\n\n  if (error) {\n    return <Error message={error} />;\n  }\n\n  return (\n    <div className=\"recipes-list\">\n      {recipesData.map(recipe => (\n        <RecipeCard recipe={recipe} />\n      ))}\n    </div>\n  );\n};\n\nRecipesList.propTypes = {\n  recipesData: PropTypes.arrayOf(PropTypes.shape({})),\n  loadRecipes: PropTypes.func.isRequired,\n  error: PropTypes.string,\n  isLoading: PropTypes.bool,\n};\n\nRecipesList.defaultProps = {\n  recipesData: [],\n  error: null,\n  isLoading: false,\n};\n\nexport default RecipesList;\n","import { connect } from 'react-redux';\nimport { loadRecipes } from '../../store/actions';\nimport { selectRecipes,\n  selectRecipesListError,\n  selectIsLoading } from '../../store/selectors';\nimport RecipesList from './RecipesList';\n\nconst mapStateToProps = state => ({\n  recipesData: selectRecipes(state),\n  error: selectRecipesListError(state),\n  isLoading: selectIsLoading(state),\n});\n\nexport default connect(mapStateToProps, { loadRecipes })(RecipesList);\n","const API_URL = './api/recipes.json';\n\nexport const getRecipesFromServer = () => (\n  fetch(API_URL).then(response => response.json())\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ModalWindowForm = ({ close, handleAdd, handleSubmit }) => (\n  <form\n    className=\"form\"\n    onSubmit={handleSubmit}\n  >\n    <label htmlFor=\"form__title\">\n      Name\n    </label>\n    <input\n      type=\"text\"\n      name=\"title\"\n      id=\"recipe__title\"\n      required\n      onChange={e => handleAdd(e)}\n    />\n\n    <label htmlFor=\"form__ingredients\">\n      Ingredients\n    </label>\n    <p className=\"form__tips\">use ; after ingredient</p>\n    <textarea\n      name=\"ingredients\"\n      id=\"recipe__ingredients\"\n      cols=\"30\"\n      rows=\"10\"\n      required\n      onChange={e => handleAdd(e)}\n    />\n\n    <label htmlFor=\"form__directions\">\n      Directions\n    </label>\n    <textarea\n      name=\"directions\"\n      id=\"recipe__directions\"\n      cols=\"30\"\n      rows=\"10\"\n      required\n      onChange={e => handleAdd(e)}\n    />\n\n    <label htmlFor=\"from__img\">\n      Image Link\n    </label>\n    <input\n      type=\"text\"\n      name=\"image\"\n      id=\"recipe_img\"\n      onChange={e => handleAdd(e)}\n    />\n\n    <button\n      type=\"button\"\n      className=\"form__close\"\n      onClick={() => close(false)}\n    >\n      x\n    </button>\n\n    <input\n      type=\"submit\"\n      value=\"Add\"\n      className=\"recipe__button\"\n    />\n  </form>\n);\n\nModalWindowForm.propTypes = {\n  close: PropTypes.func.isRequired,\n  handleAdd: PropTypes.func.isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n};\n\nexport default ModalWindowForm;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport ModalWindowForm from './ModalWindowForm';\n\nconst ModalWindow = ({ closeWindow, addRecipe }) => {\n  const [newRecipe, setNewRecipe] = useState({});\n\n  const handleAddRecipe = ({ target }) => {\n    switch (target.name) {\n      case 'title':\n        return setNewRecipe({\n          ...newRecipe,\n          name: target.value,\n        });\n      case 'ingredients':\n        return setNewRecipe({\n          ...newRecipe,\n          ingredients: target.value.split(';'),\n        });\n      case 'directions':\n        return setNewRecipe({\n          ...newRecipe,\n          steps: target.value,\n        });\n      case 'image':\n        return setNewRecipe({\n          ...newRecipe,\n          imageURL: target.value,\n        });\n      default:\n        return null;\n    }\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    const date = new Date();\n\n    addRecipe({\n      ...newRecipe,\n      date: `${date.getFullYear()}-${date.getMonth() + 1}-${date.getDate()}`,\n    });\n\n    closeWindow(false);\n  };\n\n  return (\n    <div className=\"modal-window__wrapper\">\n      <ModalWindowForm\n        close={closeWindow}\n        handleAdd={handleAddRecipe}\n        handleSubmit={handleSubmit}\n      />\n    </div>\n  );\n};\n\nModalWindow.propTypes = {\n  closeWindow: PropTypes.func.isRequired,\n  addRecipe: PropTypes.func.isRequired,\n};\n\nexport default ModalWindow;\n","import { connect } from 'react-redux';\nimport { addRecipe } from '../../store/actions';\n\nimport ModalWindow from './ModalWindow';\n\nexport default connect(null, { addRecipe })(ModalWindow);\n","import React, { useState } from 'react';\nimport ModalWindow from '../ModalWindow/index';\n\nconst AddNewRecipe = () => {\n  const [showWindow, setShowWindow] = useState(false);\n\n  return (\n    !showWindow\n      ? (\n        <button\n          type=\"button\"\n          className=\"recipe__button\"\n          onClick={() => setShowWindow(true)}\n        >\n          Add Recepe\n        </button>\n      )\n      : <ModalWindow closeWindow={setShowWindow} />\n  );\n};\n\nexport default AddNewRecipe;\n","import React from 'react';\nimport './style/index.scss';\nimport RecipesList from './components/RecipesList/index';\nimport AddNewRecipe from './components/AddNewRecipe/AddNewRecipe';\n\nconst App = () => (\n  <section className=\"recipes-page\">\n    <h1 className=\"recipes-page__title\">Cookbook</h1>\n    <RecipesList />\n    <AddNewRecipe />\n  </section>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './store/store';\n\nimport App from './App';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n\n  document.getElementById('root')\n);\n"],"sourceRoot":""}